{"version":3,"file":"calculator.js","sources":["../src/js/calculator.js"],"sourcesContent":["import { evaluate } from 'mathjs';\n\nconst outerInput = document.querySelector('.input-expressions');\nconst listInputBtns = document.querySelector('.list-buttons-input-numbers');\n\nouterInput.value = '0';\n\nlistInputBtns.addEventListener('click', (e) => {\n    const target = e.target;\n\n    if (!target.classList.contains('btn-input')) return;\n\n    const value = target.textContent;\n\n    // Очистка всего ввода\n    if (target.classList.contains('delete-all-btn')) {\n        outerInput.value = '0';\n        return;\n    }\n\n    // Удаление последнего символа\n    if (target.classList.contains('delete-btn')) {\n        if (outerInput.value.length === 1 && outerInput.value === '0') {\n            return;\n        } else {\n            outerInput.value = outerInput.value.slice(0, -1);\n            if (outerInput.value.length === 0) {\n                outerInput.value = '0';\n            }\n            return;\n        }      \n    }\n\n    // Вычисление результата\n    if (target.classList.contains('equal-btn')) {\n        try {\n            const expression = outerInput.value\n                .replace(/÷/g, '/')\n                .replace(/x/g, '*');\n\n            outerInput.value = evaluate(expression).toFixed(2); \n        } catch {\n            outerInput.value = 'Error';\n        }\n        return;\n    }\n\n    // Обработка операций sin, cos, tan, x², √\n    if (['x²', '√', 'sin', 'cos', 'tan'].includes(value)) {\n        const currentValue = outerInput.value.split(/[\\+\\-\\x\\÷]/).pop(); // Получаем последнее число в выражении\n        if (currentValue.length > 0) {\n            outerInput.value = outerInput.value.slice(0, -currentValue.length); // Удаляем последнее число из выражения\n        }\n\n        switch (value) {\n            case 'x²':\n                outerInput.value += `${currentValue}^2`; // Добавляем возведение в квадрат\n                break;\n            case '√':\n                outerInput.value += `sqrt(${currentValue})`; // Добавляем квадратный корень\n                break;\n            case 'sin':\n                outerInput.value += `sin(${currentValue})`; // Добавляем синус\n                break;\n            case 'cos':\n                outerInput.value += `cos(${currentValue})`; // Добавляем косинус\n                break;\n            case 'tan':\n                outerInput.value += `tan(${currentValue})`; // Добавляем тангенс\n                break;\n        }\n        return;\n    }\n    if (outerInput.value === '0' && outerInput.value.length === 1 && !isNaN(parseFloat(value))) {\n        outerInput.value = '';\n    }\n    outerInput.value += value;\n});"],"names":["outerInput","listInputBtns","e","target","value","expression","evaluate","currentValue"],"mappings":"oGAEA,MAAMA,EAAa,SAAS,cAAc,oBAAoB,EACxDC,EAAgB,SAAS,cAAc,6BAA6B,EAE1ED,EAAW,MAAQ,IAEnBC,EAAc,iBAAiB,QAAUC,GAAM,CAC3C,MAAMC,EAASD,EAAE,OAEjB,GAAI,CAACC,EAAO,UAAU,SAAS,WAAW,EAAG,OAE7C,MAAMC,EAAQD,EAAO,YAGrB,GAAIA,EAAO,UAAU,SAAS,gBAAgB,EAAG,CAC7CH,EAAW,MAAQ,IACnB,MACH,CAGD,GAAIG,EAAO,UAAU,SAAS,YAAY,EAAG,CACzC,GAAIH,EAAW,MAAM,SAAW,GAAKA,EAAW,QAAU,IACtD,OAEAA,EAAW,MAAQA,EAAW,MAAM,MAAM,EAAG,EAAE,EAC3CA,EAAW,MAAM,SAAW,IAC5BA,EAAW,MAAQ,KAEvB,MAEP,CAGD,GAAIG,EAAO,UAAU,SAAS,WAAW,EAAG,CACxC,GAAI,CACA,MAAME,EAAaL,EAAW,MACzB,QAAQ,KAAM,GAAG,EACjB,QAAQ,KAAM,GAAG,EAEtBA,EAAW,MAAQM,EAASD,CAAU,EAAE,QAAQ,CAAC,CAC7D,MAAgB,CACJL,EAAW,MAAQ,OACtB,CACD,MACH,CAGD,GAAI,CAAC,KAAM,IAAK,MAAO,MAAO,KAAK,EAAE,SAASI,CAAK,EAAG,CAClD,MAAMG,EAAeP,EAAW,MAAM,MAAM,YAAY,EAAE,MAK1D,OAJIO,EAAa,OAAS,IACtBP,EAAW,MAAQA,EAAW,MAAM,MAAM,EAAG,CAACO,EAAa,MAAM,GAG7DH,EAAK,CACT,IAAK,KACDJ,EAAW,OAAS,GAAGO,CAAY,KACnC,MACJ,IAAK,IACDP,EAAW,OAAS,QAAQO,CAAY,IACxC,MACJ,IAAK,MACDP,EAAW,OAAS,OAAOO,CAAY,IACvC,MACJ,IAAK,MACDP,EAAW,OAAS,OAAOO,CAAY,IACvC,MACJ,IAAK,MACDP,EAAW,OAAS,OAAOO,CAAY,IACvC,KACP,CACD,MACH,CACGP,EAAW,QAAU,KAAOA,EAAW,MAAM,SAAW,GAAK,CAAC,MAAM,WAAWI,CAAK,CAAC,IACrFJ,EAAW,MAAQ,IAEvBA,EAAW,OAASI,CACxB,CAAC"}