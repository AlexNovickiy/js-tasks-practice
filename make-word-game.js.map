{"version":3,"file":"make-word-game.js","sources":["../src/js/make-word-game.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst listMixWord = document.querySelector('.list-mixed-word');\nconst inputSearchWord = document.querySelector('.input-search-word');\nconst btnChangeWord = document.querySelector('.btn-change-word');\nconst btnCheckWord = document.querySelector('.btn-check-word');\n\nconst words = [\n  \"комп'ютер\",\n  'телефон',\n  'інтернет',\n  'музика',\n  'навушники',\n  'програма',\n  'екран',\n  'пароль',\n  'робот',\n  'клавіатура',\n  'мишак',\n  'браузер',\n  'сервер',\n  'код',\n  'сайт',\n  'електроніка',\n  'пам’ять',\n  'іграшка',\n  'батарея',\n  'дисплей',\n];\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nlet currentWord = words[Math.floor(Math.random() * words.length)]\n  .toUpperCase()\n  .split('');\n\nlet mixedWord = shuffleArray([...currentWord]);\n\nfunction renderFunction() {\n  const templWordLetters = mixedWord\n    .map(letter => `<li class=\"item-letter-word\">${letter}</li>`)\n    .join('');\n\n  listMixWord.innerHTML = templWordLetters;\n}\n\nrenderFunction();\n\nfunction changeWord() {\n  currentWord = words[Math.floor(Math.random() * words.length)]\n    .toUpperCase()\n    .split(''); // Генерируем новое слово\n  mixedWord = shuffleArray([...currentWord]); // Перемешиваем новое слово\n  renderFunction(); // Обновляем отображение\n}\n\nfunction checkWord(word) {\n  const arrayForCompare = [];\n\n  const inputValue = inputSearchWord.value\n    .replace(/\\s+/g, '')\n    .toUpperCase()\n    .split('');\n\n  // Проверяем, существует ли inputWord и его значение\n  if (!inputSearchWord || inputValue.length === 0) {\n    console.log('Виникла помилка: поле ввода пустое або не знайдено');\n    iziToast.error({\n      title: '',\n      message: `Please , fill the input`,\n      backgroundColor: '#ef4040',\n      timeout: 4000,\n      class: 'message-warning',\n      position: 'topCenter',\n      titleColor: 'white',\n      messageColor: 'white',\n    });\n    return;\n  }\n\n  // Проверяем, что слово не пустое\n  if (word.length <= 0) {\n    console.log('Виникла помилка: слово для перевірки порожнє');\n    return;\n  }\n\n  word.forEach((letter, i) => {\n    if (letter === inputValue[i]) {\n      arrayForCompare.push(letter);\n    }\n  });\n\n  const arraysAreEqual =\n    arrayForCompare.length === word.length &&\n    arrayForCompare.every((letter, i) => letter === word[i]);\n\n  console.log(arraysAreEqual);\n\n  if (arraysAreEqual) {\n    iziToast.success({\n      title: 'Success',\n      message: 'You guessed the word',\n      backgroundColor: '#ef4040',\n      timeout: null,\n      class: 'message-warning',\n      position: 'topCenter',\n      titleColor: 'white',\n      messageColor: 'white',\n      iconColor: 'white',\n    });\n  } else {\n    iziToast.info({\n      title: 'Wrong',\n      message: `You didn't guess the word`,\n      backgroundColor: '#ef4040',\n      timeout: 4000,\n      class: 'message-warning',\n      position: 'topRight',\n      titleColor: 'white',\n      messageColor: 'white',\n    });\n  }\n}\n\nbtnChangeWord.addEventListener('click', changeWord);\n\nbtnCheckWord.addEventListener('click', () => checkWord(currentWord));\n\nObject.prototype.getValueByPathString = function (pathString) {\n  return pathString\n    .split('.') // перетворюємо \"user.profile.name\" на ['user', 'profile', 'name']\n    .reduce((acc, key) => acc && acc[key], this);\n};\n\nconst data = {\n  user: {\n    profile: {\n      name: 'Андрій',\n      age: 22,\n    },\n  },\n};\n\nconsole.log(data.getValueByPathString('user.profile.name')); // \"Андрій\"\nconsole.log(data.getValueByPathString('user.profile.age')); // 22\nconsole.log(data.getValueByPathString('кк.settings.theme')); // undefined\n\nconst path = 'user.profile.name';\nconst keys = path.split('.');\nconst base = { user: { profile: { name: 'Alex' } } };\n\nconst result = keys.reduceRight((acc, key) => {\n  const result = { [key]: acc };\n  console.log(result);\n  return result;\n}, 'Alex');\n\nconsole.log(result);\n// { user: { profile: { name: 'Alex' } } }\n"],"names":["listMixWord","inputSearchWord","btnChangeWord","btnCheckWord","words","shuffleArray","array","i","j","currentWord","mixedWord","renderFunction","templWordLetters","letter","changeWord","checkWord","word","arrayForCompare","inputValue","iziToast","arraysAreEqual","pathString","acc","key","data","path","keys","result"],"mappings":"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"}