{"version":3,"file":"stopwatch.js","sources":["../src/js/stopwatch.js"],"sourcesContent":["const minutesEl = document.querySelector (\"[data-minutes]\");\nconst secondsEl = document.querySelector(\"[data-seconds]\");\nconst msEl = document.querySelector(\"[data-ms]\");\nconst startButton = document.querySelector(\".btn-start\");\nconst stopButton = document.querySelector(\".btn-stop\");\nconst resetButton = document.querySelector(\".btn-reset\");\n\nstartButton.addEventListener(\"click\", startTimer);\nstopButton.addEventListener(\"click\", stopTimer);\nresetButton.addEventListener(\"click\", resetTimer);\n\nlet timerInterval;\nlet elapsedTime;\n\nfunction startTimer() {\n    if (timerInterval) return;\n    let startTime = Date.now();\n    timerInterval = setInterval(() => {\n        elapsedTime = Date.now() - startTime;\n        const { minutes, seconds, milliseconds } = addLeadingZero(convertMs(elapsedTime));\n        \n        minutesEl.textContent = minutes;\n        secondsEl.textContent = seconds;\n        msEl.textContent = milliseconds;\n    }, 10);\n}\n\nfunction stopTimer() {\n    if (timerInterval) {\n        clearInterval(timerInterval);\n        timerInterval = null;\n        return;\n    } else if (elapsedTime) {\n        let startTime = Date.now() - elapsedTime;\n    timerInterval = setInterval(() => {\n        elapsedTime = Date.now() - startTime;\n        const { minutes, seconds, milliseconds } = addLeadingZero(convertMs(elapsedTime));\n        \n        minutesEl.textContent = minutes;\n        secondsEl.textContent = seconds;\n        msEl.textContent = milliseconds;\n    }, 10);\n    }\n}\n\nfunction resetTimer() {\n    if (timerInterval) {\n        clearInterval(timerInterval);\n        timerInterval = null;\n        elapsedTime = 0;\n    }\n    \n    minutesEl.textContent = \"00\";\n    secondsEl.textContent = \"00\";\n    msEl.textContent = \"00\";\n}\n\nfunction convertMs(ms) {\n    const minutes = Math.floor(ms / 1000 / 60);\n    const seconds = Math.floor((ms / 1000) % 60);\n    const milliseconds = Math.floor((ms % 1000) / 10);\n    \n    return {\n        minutes,\n        seconds,\n        milliseconds,\n    };\n}\n\nfunction addLeadingZero(value) {\n    for (const key of Object.keys(value)) {\n        value[key] = value[key].toString().padStart(2, '0');\n}\n    return value;\n}\n"],"names":["minutesEl","secondsEl","msEl","startButton","stopButton","resetButton","startTimer","stopTimer","resetTimer","timerInterval","elapsedTime","startTime","minutes","seconds","milliseconds","addLeadingZero","convertMs","ms","value","key"],"mappings":"oDAAA,MAAMA,EAAY,SAAS,cAAe,gBAAgB,EACpDC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAO,SAAS,cAAc,WAAW,EACzCC,EAAc,SAAS,cAAc,YAAY,EACjDC,EAAa,SAAS,cAAc,WAAW,EAC/CC,EAAc,SAAS,cAAc,YAAY,EAEvDF,EAAY,iBAAiB,QAASG,CAAU,EAChDF,EAAW,iBAAiB,QAASG,CAAS,EAC9CF,EAAY,iBAAiB,QAASG,CAAU,EAEhD,IAAIC,EACAC,EAEJ,SAASJ,GAAa,CAClB,GAAIG,EAAe,OACnB,IAAIE,EAAY,KAAK,MACrBF,EAAgB,YAAY,IAAM,CAC9BC,EAAc,KAAK,IAAK,EAAGC,EAC3B,KAAM,CAAE,QAAAC,EAAS,QAAAC,EAAS,aAAAC,CAAY,EAAKC,EAAeC,EAAUN,CAAW,CAAC,EAEhFV,EAAU,YAAcY,EACxBX,EAAU,YAAcY,EACxBX,EAAK,YAAcY,CACtB,EAAE,EAAE,CACT,CAEA,SAASP,GAAY,CACjB,GAAIE,EAAe,CACf,cAAcA,CAAa,EAC3BA,EAAgB,KAChB,MACH,SAAUC,EAAa,CACpB,IAAIC,EAAY,KAAK,IAAG,EAAKD,EACjCD,EAAgB,YAAY,IAAM,CAC9BC,EAAc,KAAK,IAAK,EAAGC,EAC3B,KAAM,CAAE,QAAAC,EAAS,QAAAC,EAAS,aAAAC,CAAY,EAAKC,EAAeC,EAAUN,CAAW,CAAC,EAEhFV,EAAU,YAAcY,EACxBX,EAAU,YAAcY,EACxBX,EAAK,YAAcY,CACtB,EAAE,EAAE,CACJ,CACL,CAEA,SAASN,GAAa,CACdC,IACA,cAAcA,CAAa,EAC3BA,EAAgB,KAChBC,EAAc,GAGlBV,EAAU,YAAc,KACxBC,EAAU,YAAc,KACxBC,EAAK,YAAc,IACvB,CAEA,SAASc,EAAUC,EAAI,CACnB,MAAML,EAAU,KAAK,MAAMK,EAAK,IAAO,EAAE,EACnCJ,EAAU,KAAK,MAAOI,EAAK,IAAQ,EAAE,EACrCH,EAAe,KAAK,MAAOG,EAAK,IAAQ,EAAE,EAEhD,MAAO,CACH,QAAAL,EACA,QAAAC,EACA,aAAAC,CACR,CACA,CAEA,SAASC,EAAeG,EAAO,CAC3B,UAAWC,KAAO,OAAO,KAAKD,CAAK,EAC/BA,EAAMC,CAAG,EAAID,EAAMC,CAAG,EAAE,SAAQ,EAAG,SAAS,EAAG,GAAG,EAEtD,OAAOD,CACX"}